//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Expression.Blend.DataStore.classes
{
	using System;
	using System.Collections.Generic;

	public class classesGlobalStorage
	{
		public static classesGlobalStorage Singleton;
		public bool Loading {get;set;}
		private List<WeakReference> registrar; 

		public classesGlobalStorage()
		{
			this.registrar = new List<WeakReference>();
		}
		
		static classesGlobalStorage()
		{
			Singleton = new classesGlobalStorage();
		}

		public void Register(classes dataStore)
		{
			this.registrar.Add(new WeakReference(dataStore));
		}

		public void OnPropertyChanged(string property)
		{
			foreach (WeakReference entry in this.registrar)
			{
				if (!entry.IsAlive)
				{
					continue;
				}
				classes dataStore = (classes)entry.Target;
				dataStore.FirePropertyChanged(property);
			}
		}
		
		public bool AssignementAllowed
		{
			get
			{
				// Only assign from loading once
				if(this.Loading && this.registrar.Count > 0)
				{
					return false;
				}
				
				return true;
			}
		}

		private string _name = string.Empty;

		public string name
		{
			get
			{
				return this._name;
			}

			set
			{
				if(!this.AssignementAllowed)
				{
					return;
				}
				
				if (this._name != value)
				{
					this._name = value;
					this.OnPropertyChanged("name");
				}
			}
		}

		private string _code = string.Empty;

		public string code
		{
			get
			{
				return this._code;
			}

			set
			{
				if(!this.AssignementAllowed)
				{
					return;
				}
				
				if (this._code != value)
				{
					this._code = value;
					this.OnPropertyChanged("code");
				}
			}
		}

		private string _starttime = string.Empty;

		public string starttime
		{
			get
			{
				return this._starttime;
			}

			set
			{
				if(!this.AssignementAllowed)
				{
					return;
				}
				
				if (this._starttime != value)
				{
					this._starttime = value;
					this.OnPropertyChanged("starttime");
				}
			}
		}

		private string _endtime = string.Empty;

		public string endtime
		{
			get
			{
				return this._endtime;
			}

			set
			{
				if(!this.AssignementAllowed)
				{
					return;
				}
				
				if (this._endtime != value)
				{
					this._endtime = value;
					this.OnPropertyChanged("endtime");
				}
			}
		}
	}

	public class classes : System.ComponentModel.INotifyPropertyChanged
	{
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public void FirePropertyChanged(string propertyName)
		{
			this.OnPropertyChanged(propertyName);
		}

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}

		public classes()
		{
			try
			{
				System.Uri resourceUri = new System.Uri("/Class-i-er;component/DataStore/classes/classes.xaml", System.UriKind.Relative);
				if (System.Windows.Application.GetResourceStream(resourceUri) != null)
				{
					classesGlobalStorage.Singleton.Loading = true;
					System.Windows.Application.LoadComponent(this, resourceUri);
					classesGlobalStorage.Singleton.Loading = false;
					classesGlobalStorage.Singleton.Register(this);
				}
			}
			catch (System.Exception)
			{
			}
		}

		private string _name = string.Empty;

		public string name
		{
			get
			{
				return classesGlobalStorage.Singleton.name;
			}

			set
			{
				classesGlobalStorage.Singleton.name = value;
			}
		}

		private string _code = string.Empty;

		public string code
		{
			get
			{
				return classesGlobalStorage.Singleton.code;
			}

			set
			{
				classesGlobalStorage.Singleton.code = value;
			}
		}

		private string _starttime = string.Empty;

		public string starttime
		{
			get
			{
				return classesGlobalStorage.Singleton.starttime;
			}

			set
			{
				classesGlobalStorage.Singleton.starttime = value;
			}
		}

		private string _endtime = string.Empty;

		public string endtime
		{
			get
			{
				return classesGlobalStorage.Singleton.endtime;
			}

			set
			{
				classesGlobalStorage.Singleton.endtime = value;
			}
		}
	}
}
